name: Docker Images
permissions:
  contents: read
  packages: write
  pull-requests: write

on:
  push:
    branches:
      - master
      - 'ANW-**'
    tags:
      - 'v[2-9].[0-9].[0-9]*'  # matches v2.0.0, v3.1.4-beta, etc.

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta_archivesspace.outputs.version }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract ANW-123 part from branch name
        id: extract
        run: |
          echo "Branch: ${{ github.ref_name }}"
          ticket=$(echo "${{ github.ref_name }}" | grep -oE 'ANW-[0-9]+') || ticket=""
          echo "ticket=$ticket" >> $GITHUB_OUTPUT

      # ArchivesSpace Metadata
      - name: Extract ArchivesSpace metadata
        id: meta_archivesspace
        uses: docker/metadata-action@v5
        with:
          images: archivesspace/archivesspace
          tags: |
            type=raw,value=${{ steps.extract.outputs.ticket }},enable=${{ steps.extract.outputs.ticket != '' }}
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      # Solr Metadata
      - name: Extract Solr metadata
        id: meta_solr
        uses: docker/metadata-action@v5
        with:
          images: archivesspace/solr
          tags: |
            type=raw,value=${{ steps.extract.outputs.ticket }},enable=${{ steps.extract.outputs.ticket != '' }}
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      # Proxy Metadata
      - name: Extract Proxy metadata
        id: meta_proxy
        uses: docker/metadata-action@v5
        with:
          images: archivesspace/proxy
          tags: |
            type=raw,value=${{ steps.extract.outputs.ticket }},enable=${{ steps.extract.outputs.ticket != '' }}
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Build and push ArchivesSpace image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta_archivesspace.outputs.tags }}
          labels: ${{ steps.meta_archivesspace.outputs.labels }}

      - name: Build and push Solr image
        uses: docker/build-push-action@v5
        with:
          context: ./solr
          push: true
          tags: ${{ steps.meta_solr.outputs.tags }}
          labels: ${{ steps.meta_solr.outputs.labels }}

      - name: Build and push Proxy image
        uses: docker/build-push-action@v5
        with:
          context: ./proxy
          push: true
          tags: ${{ steps.meta_proxy.outputs.tags }}
          labels: ${{ steps.meta_proxy.outputs.labels }}

  draft-pull-request-exists:
    name: Check for draft PR
    needs: build
    runs-on: ubuntu-latest
    outputs:
      run_job: ${{ steps.check.outputs.run_job }}
    steps:
      - name: Determine if branch has a draft PR
        id: check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ github.ref_name }}
          REPO: ${{ github.repository }}
        run: |
          echo "🔎 Checking for draft PRs on branch '$BRANCH_NAME'..."

          # Query open PRs for this branch
          draft_prs=$(gh api repos/$REPO/pulls \
            -F head="$REPO:$BRANCH_NAME" \
            -F state=open \
            --jq '.[] | select(.draft==true) | .number')

          if [ -n "$draft_prs" ]; then
            echo "❌ Found draft PR(s): $draft_prs — skipping run."
            echo "run_job=false" >> "$GITHUB_OUTPUT"
          else
            echo "✅ No draft PR found — proceeding."
            echo "run_job=true" >> "$GITHUB_OUTPUT"
          fi

  e2e-tests:
    name: Run e2e tests unless a draft PR exists
    needs: draft-pull-request-exists
    if: needs.draft-pull-request-exists.outputs.run_job == 'true'
    secrets: inherit
    uses: ./.github/workflows/e2e-tests.yml
    with:
      image_tag: ${{ needs.build.outputs.image_tag }}
