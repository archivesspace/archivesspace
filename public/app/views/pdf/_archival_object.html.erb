<% (level - 1).times do |previous_level| %>
    <div class="print-record-border level-<%= previous_level + 1 %>">
<% end %>

<%
format_container = lambda do |type, indicator|
    if type
        type = type.capitalize
    end

    [type, indicator].compact.join(' ')
end
%>

<div class="avoid-break">
    <div class="print-record-border print-record level-<%= level %>">
        <p><a class="record-title" id="<%= record.uri %>"><%== process_mixed_content(record.display_string) %></a></p>

        <% Array(record.instances).each do |instance| %>
            <% if instance['sub_container'] %>
                <div class="container-information">
                    <%
                    container_string = [
                        format_container.call(instance['sub_container']['top_container']['_resolved']['type'],
                                              instance['sub_container']['top_container']['_resolved']['indicator']),
                        format_container.call(instance['sub_container']['type_2'],
                                              instance['sub_container']['indicator_2']),
                        format_container.call(instance['sub_container']['type_3'],
                                              instance['sub_container']['indicator_3'])
                    ].reject(&:empty?).join('; ')
                    %>

                    <% unless container_string.empty? %>
                        <%= container_string %>
                        <% if instance['instance_type'] %>
                            (<%= I18n.t("enumerations.instance_instance_type.#{instance['instance_type']}",
                                        :default => instance['instance_type']) %>)
                        <% end %>
                    <% end %>
                </div>
            <% end %>
        <% end %>

        <div class="indented">
            <% record.notes.each do |note_type, note| %>
                <% if note_type != 'physdesc' %>
                  <% note.each do |n| %>
                    <% if !n['is_inherited'] %>
                      <h3>
                        <% if n['label'] %>
                            <%== process_mixed_content(n['label']) %>
                        <% else %>
                            <%= I18n.t("enumerations._note_types.#{note_type}") %>
                        <% end %>
                      </h3>
                      <p><%== process_mixed_content(n['note_text']) %></p>
                    <% end %>
                  <% end %>
                <% end %>
            <% end %>

            <dl>
                <% unless record.direct_component_id.empty? %>
                    <dt><%= I18n.t('resource._public.finding_aid.identifier') %></dt><dd><%= record.direct_component_id %></dd>
                <% end %>

                <% if false %>
                <% record.dates.each do |date| %>
                    <% next if date['_inherited'] %>
                    <dt><%= I18n.t('resource._public.finding_aid.date') %></dt><dd><%= date['final_expression'] %></dd>
                <% end %>
                <% end %>

                <% record.extents.each do |extent| %>
                    <% next if extent['_inherited'] %>
                    <dt><%= I18n.t('resource._public.physdesc') %></dt><dd><%= extent['display'] %></dd>
                <% end %>

                <% unless record.notes.include?('langmaterial') || record.lang_materials.blank? %>
                  <% record.lang_materials.each do |lang_material| %>
                    <% next if lang_material['_inherited'] %>
                    <dt><%= I18n.t('resource._public.lang') %></dt>
                        <dd><%= t('enumerations.language_iso639_2.' + lang_material['language'])%></dd>
                  <% end %>
                <% end %>

                <% record.notes.each do |note_type, note| %>
                  <% if note_type == 'physdesc' %>
                    <% note.each do |n| %>
                      <% if !n['is_inherited'] %>
                        <dt><%= I18n.t('resource._public.physdesc') %></dt><dd><%== process_mixed_content(n['note_text']) %></dd>
                      <% end %>
                    <% end %>
                  <% end %>
                <% end %>

                <%= render(:partial => 'digital_object_links', :locals => {
                    :instances => record.instances
                }) %>

                <% subjects = Array(record.subjects).reject {|s| s['is_inherited']} %>
                <% if !subjects.empty? %>
                    <dt><%= I18n.t('pdf_reports.controlled_access_headings') %></dt>
                    <dd>
                        <ul>
                            <% subjects.each do |subject| %>
                                <li><%= subject['title'] %></li>
                            <% end %>
                        </ul>
                    </dd>
                <% end %>
                
                <% ASUtils.find_local_directories('public/views/_pdf_archival_object.html.erb').each do |template| %>
                    <%= render(:file => template, :locals => {:record => record}) if File.exists?(template) %>
                <% end %>

            </dl>

        </div>
    </div>
</div>
<% (level - 1).times do |previous_level| %>
    </div>
<% end %>
