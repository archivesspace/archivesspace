<% (level - 1).times do |previous_level| %>
    <div class="print-record-border level-<%= previous_level + 1 %>">
<% end %>

<%
format_container = lambda do |type, indicator|
    if type
        type = type.capitalize
    end

    [type, indicator].compact.join(' ')
end
%>
<%
  is_heading = is_parent && (record.level == "series" || record.level == "subseries" || record.level == "collection") 
%>

<div class="avoid-break">
    <div class="print-record-border print-record level-<%= level %> <%= is_heading ? "first-post" : "" %>">
      <% if level == 1 %>
        <div class="ao-summary">
      <% end %>
        <p><a class="record-title" id="<%= record.uri %>"><%== process_mixed_content(record.display_string) %></a></p>

         <% record.notes.each do |note_type, note| %>
           <% if note_type == 'scopecontent' %>
             <% note.each do |n| %>
               <% if !n['is_inherited'] %>
                 <h4>
                   <% if n['label'] %>
                       <%== process_mixed_content(n['label']) %>
                   <% else %>
                       <%= I18n.t("enumerations._note_types.#{note_type}") %>
                   <% end %>
                 </h4>
                 <p><%== process_mixed_content(n['note_text']) %></p>
               <% end %>
             <% end %>
           <% end %>
         <% end %>

    <% if level == 1 %>
      </div>
    <% end %>

    <% if is_heading %>
       <table class="collection-inventory-header">
          <td class="title">Title/Description</td>
          <td class="instance">Instances</td>
       </table>

    <% end %>
        <% Array(record.instances).each do |instance| %>
            <% if instance['sub_container'] %>
                <div class="container-information">
                    <%
                      if instance['sub_container'] &&
                         instance['sub_container']['top_container'] &&
                         instance['sub_container']['top_container']['_resolved'] &&
                         instance['sub_container']['top_container']['_resolved']['display_string']

                        tc_display_string = instance['sub_container']['top_container']['_resolved']['display_string'].split(':')[0]

                        if tc_display_string =~ /:/
                          box_string = tc_display_string.split(':')[0]
                        else
                          box_string = tc_display_string
                        end

                      else
                        box_string = ""
                      end

                      if instance['sub_container'] &&
                         instance['sub_container']['type_2'] &&
                         instance['sub_container']['indicator_2']
                        folder_string = instance['sub_container']['type_2'] + " " + instance['sub_container']['indicator_2']
                      else
                        folder_string = ""
                      end
                    %>

                    <% unless box_string.empty? || folder_string.empty? %>
                      <div class='box-area'>
                        <div class='box-string'><%= box_string.downcase %></div>
                        <div class='folder-string'><%= folder_string.downcase %></div>
                      </div>
                    <% end %>
                </div>
            <% end %>
        <% end %>

        <div class="indented">
            <% record.notes.each do |note_type, note| %>
                <% if note_type != 'physdesc' && note_type != 'scopecontent' %>
                  <% note.each do |n| %>
                    <% if !n['is_inherited'] %>
                      <h4>
                        <% if n['label'] %>
                            <%== process_mixed_content(n['label']) %>
                        <% else %>
                            <%= I18n.t("enumerations._note_types.#{note_type}") %>
                        <% end %>
                      </h4>
                      <p><%== process_mixed_content(n['note_text']) %></p>
                    <% end %>
                  <% end %>
                <% end %>
            <% end %>

            <dl>
                <% record.extents.each do |extent| %>
                    <% next if extent['_inherited'] %>
                    <dt><%= I18n.t('resource._public.physdesc') %></dt><dd><%= extent['display'] %></dd>
                <% end %>

                <% unless record.notes.include?('langmaterial') || record.lang_materials.blank? %>
                  <% record.lang_materials.each do |lang_material| %>
                    <% next if lang_material['_inherited'] %>
                    <dt><%= I18n.t('resource._public.lang') %></dt>
                        <dd><%= t('enumerations.language_iso639_2.' + lang_material['language'])%></dd>
                  <% end %>
                <% end %>

                <% record.notes.each do |note_type, note| %>
                  <% if note_type == 'physdesc' %>
                    <% note.each do |n| %>
                      <% if !n['is_inherited'] %>
                        <dt><%= I18n.t('resource._public.physdesc') %></dt><dd><%== process_mixed_content(n['note_text']) %></dd>
                      <% end %>
                    <% end %>
                  <% end %>
                <% end %>

                <%= render(:partial => 'digital_object_links', :locals => {
                    :instances => record.instances
                }) %>

                <% subjects = Array(record.subjects).reject {|s| s['is_inherited']} %>
                <% if !subjects.empty? %>
                    <dt><%= I18n.t('pdf_reports.controlled_access_headings') %></dt>
                    <dd>
                        <ul>
                            <% subjects.each do |subject| %>
                                <li><%= subject['title'] %></li>
                            <% end %>
                        </ul>
                    </dd>
                <% end %>
                
                <% ASUtils.find_local_directories('public/views/_pdf_archival_object.html.erb').each do |template| %>
                    <%= render(:file => template, :locals => {:record => record}) if File.exists?(template) %>
                <% end %>

            </dl>

        </div>
    </div>
</div>
<% (level - 1).times do |previous_level| %>
    </div>
<% end %>
