<% define_template("container_labels_job", jsonmodel_definition(:container_labels_job)) do |form| %>

  <%= form.hidden_input :source, :class => 'translation-placeholder' %>
  <%= render_aspace_partial :partial => "resources/linker", :locals => { :form => form, :field_label => I18n.t("actions.container_labels") }%>

<% end %>

<% define_template("find_and_replace_job", jsonmodel_definition(:find_and_replace_job)) do |form| %>
    <p><%= I18n.t("job._frontend.messages.find_and_replace_instructions") %></p>

  <%= form.hidden_input :base_record_uri, :class => 'translation-placeholder' %>

  <%= render_aspace_partial :partial => "resources/linker", :locals => { :form => form, :field_label => 'Base Resource Record' }%>

  <%= form.label_and_select "record_type", [] %>
  <%= form.label_and_select "property", [] %>

  <%= form.label_and_textfield "find" %>
  <%= form.label_and_textfield "replace" %>

<% end %>

<% define_template("print_to_pdf_job", jsonmodel_definition(:print_to_pdf_job)) do |form| %>

  <%= form.hidden_input :source, :class => 'translation-placeholder' %>

  <%= render_aspace_partial :partial => "resources/linker", :locals => { :form => form, :field_label => I18n.t("actions.resource_to_pdf") }%>
  <%= form.label_and_boolean "include_unpublished" %>

<% end %>

<% define_template("fileupload") do |form| %>
  <span class="btn btn-success btn-sm fileinput-button">
    <span class="glyphicon glyphicon-plus icon-white"></span>
    <span><%= I18n.t("job._frontend.actions.add_file") %></span>
    <input type="file" name="files[]" multiple="multiple">
  </span>
  <div id="files">
    <div class="hint"><span class="plus">+</span> <%= I18n.t("job._frontend.messages.drag_and_drop_hint") %></div>
  </div>
<% end %>

<% define_template("import_job", jsonmodel_definition(:import_job)) do |form| %>
  <section>
    <fieldset>
        <%= form.label_and_select "import_type", @import_types %>
    </fieldset>
  </section>

  <section id="job_filenames_">
    <% form.emit_template("fileupload") %>
    <% form.path("filenames") %>
  </section>

<% end %>

<% define_template("generate_slugs_job", jsonmodel_definition(:generate_slugs_job)) do |form| %>
  <hr/>
  <br/>

    <div class="alert alert-danger">
      <p> <%= I18n.t("job._frontend.messages.slug_lost_warning") %>
    </div>
    <br/>
    <p><%= I18n.t("job._frontend.messages.slug_generation") %></p>
    <br/>
    <p><%= I18n.t("job._frontend.messages.slug_config_msg") %></p>
    <% if AppConfig[:auto_generate_slugs_with_id] %>
      <p><%= I18n.t("job._frontend.messages.slug_config_id") %></p>

      <% if AppConfig[:generate_resource_slugs_with_eadid] %>
        <p><%= I18n.t("job._frontend.messages.slug_config_eadid") %></p>
      <% end %>

      <% if AppConfig[:generate_archival_object_slugs_with_cuid] %>
        <p><%= I18n.t("job._frontend.messages.slug_config_cuid") %></p>
      <% end %>
    <% else %>
      <p><%= I18n.t("job._frontend.messages.slug_config_title") %></p>
    <% end %>

<% end %>

<% define_template("generate_arks_job", jsonmodel_definition(:generate_arks_job)) do |form| %>
  <hr/>
  <br/>
  <br/>
  <p><%= I18n.t("job._frontend.messages.ark_generation") %></p>
  <br/>
<% end %>

<% define_template("job", jsonmodel_definition(:job)) do |form| %>

  <input id="job_type" name="job[job_type]" type="hidden" value="<%= params['job_type'] %>">

  <div id="job_form_messages">
  </div>

  <div id="job_type_fields"></div>
<% end %>

<% @report_data['reports'].each do |code, report| %>
  <% define_template(code, jsonmodel_definition(:report_job)) do |form| %>

    <% report_params = report["params"].reject{|p| ["format", "repo_id"].include?(p[0])} %>

    <% report_params.each do | param | %>
      <div class="form-group">
        <label class="col-sm-2 control-label"><%= I18n.t("reports.parameters.#{param[0]}", :default => param[0]) %></label>
        <div class="col-sm-9">
          <% if param[1] === "Date" %>
            <%= form.textfield param[0], nil,  :class => 'date-field form-control', :'data-format' => 'yyyy-mm-dd', :placeholder => 'yyyy-mm-dd'  %>
          <% elsif param[1] === "Boolean" %>
            <%= form.checkbox param[0] %>
          <% else %>
            <%# Custom types will be rendered using a partial with the corresponding name %>
            <%= render_aspace_partial :partial => "jobs/report_partials/#{param[1].downcase}", :locals => {:object => @job, :form => form, :name => param[0]} %>
          <% end %>
        </div>
      </div>
    <% end %>

  <% end %>
<% end %>


<% define_template("report_job", jsonmodel_definition(:report_job)) do |form| %>

  <%= form.hidden_input :report_type %>

  <div class="report-list">

    <% @report_data['reports'].sort_by { |code, report| I18n.t("reports.#{code}.title") }.each do |code, report| %>
      <div class="report-listing" id="<%= code %>">
        <div class="heading">
          <button class="report-title btn btn-link" for="<%= code %>" type="button">
            <%= I18n.t("reports.#{code}.title") %>
          </button>

          <button class="pull-right btn btn-primary select-report" for="<%= code %>" type="button">
            Select
          </button>
          <button class="pull-right btn btn-primary unselect-report" for="<%= code %>" type="button">
            Back
          </button>

        </div>

        <div class="report-description" for="<%= code %>">
          <%= I18n.t("reports.#{report["code"]}.description", :default => code) %>
        </div>

      </div>

    <% end %>
  </div>

  <div id="report-fields">
    <%# template for selected report type is rendered here %>
  </div>

  <div id="format">
    <% formats = @report_data["formats"] || %w{ json csv html pdf } %>
    <%= form.label_and_select :format, formats.collect{|format| [I18n.t("reports.formats.#{format}", :default => format), format]} %>
    <div class="form-group csv_options" hidden="true">
      <label class="col-sm-2 control-label">Linked Records in JSON</label>
      <div class="col-sm-9 checkbox">
        <%= check_box_tag("job[job_params][csv_show_json]") %>
      </div>
    </div>
  </div>

<% end %>

<%# Now create a template for all job types not handled above - eg from plugins %>
<% job_types.keys.each do |type| %>
  <% next if ['container_labels_job', 'find_and_replace_job', 'print_to_pdf_job', 'import_job', 'report_job', 'generate_slugs_job', 'generate_arks_job'].include?(type) %>

  <% define_template(type, jsonmodel_definition(type.intern)) do |form| %>

    <% begin %>
      <%= render_aspace_partial :partial => "#{type}/form", :locals => {:object => @job, :form => form} %>
    <% rescue ActionView::MissingTemplate %>
      <%# don't require plugins to provide a form %>
      <p><%= I18n.t("#{type}.description", :default => '') %></p>
    <% end %>

  <% end %>
<% end %>


<%= render_aspace_partial :partial => "shared/form_messages", :locals => {:object => @job, :form => form} %>
<% form.emit_template("job") %>

<% form.emit_template(@job_type) %>
<%= form.hidden_input :jsonmodel_type, @job_type %>

<%= form_plugins_for("job", form) %>



<div id="template_import_file"><!--
  <div class="import-file">
    <span class="import-filename">${filename}</span>
    <span class="btn btn-xs btn-remove-file"><span class="glyphicon glyphicon-trash"></span></span>
  </div>
--></div>


<div id="template_find_and_replace_warning"><!--
  <hr/>
  <div class="alert alert-danger"><%= I18n.t("job._frontend.messages.find_and_replace_warning") %></div>
  <hr/>
--></div>

<div id="template_report_instructions"><!--
  <hr/>
  <div class="alert alert-success"><%= I18n.t("job._frontend.messages.report_instructions") %></div>
  <hr/>
--></div>

<div id="template_uploading_message"><!--
  <hr/>
  <div class="alert alert-info"><%= I18n.t("job._frontend.messages.uploading") %></div>
  <hr/>
--></div>

<div id="template_success_message"><!--
  <hr/>
  <div class="alert alert-success"><%= I18n.t("job._frontend.messages.upload_successful") %></div>
  <hr/>
--></div>
