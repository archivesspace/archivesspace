<%
  if form.obj['ref'].blank?
    selected_json = "{}"
  else
    selected_json = form.obj['_resolved'].to_json
  end

  exclude_ids = [] if exclude_ids.blank?

  allow_create = true if allow_create.nil?

  required = true if required.nil?

  linkable_types = ["top_container"]

  find_scope_uri = proc {
    record = [:"@accession", :"@archival_object", :"@resource"].map {|instvar| self.instance_variable_get(instvar)}.compact.first
    # If a new record resource or accession, uri will be nil and the typeahead will search
    # within the repository.
    # If an existing accession then scope the typeahead to just this accession
    uri = record.uri

    # If the record is part of a resource collection then scope the typeahead
    # search within the entire resource hierarchy. This will apply to all archival
    # objects within a tree and when editing the top most resource record
    unless record["resource"].blank?
      uri = record["resource"]["ref"]
    end

    uri
  }

  build_typeahead_url = proc {
    url_for :controller => :top_containers, :action => :typeahead, :format => :json, :uri => find_scope_uri.call
  }

%>

<div class="form-group <% if required %>required<% end %>">
  <label class="control-label col-sm-2"
         id="<%= form.id_for("ref") %>_label"
         for="<%= form.id_for("ref") %>">
    <%= t("top_container._singular") %>
  </label>
  <div class="controls col-sm-8">
    <div class="input-group linker-wrapper"
         role="combobox"
         aria-owns="<%= form.id_for("ref") %>_listbox"
         id="<%= form.id_for("ref") %>_combobox">
      <input type="text" 
             class="linker"
             id="<%= form.id_for("ref") %>"
             aria-autocomplete="both"
             aria-controls="<%= form.id_for("ref") %>_listbox"
             aria-labelledby="<%= form.id_for("ref") %>_label"
             data-label_create="<%= t("top_container.linker.create") %>"
             data-label_browse="<%= t("top_container.linker.browse") %>"
             data-label_link="<%= t("linker.link") %>"
             data-label_create_and_link="<%= t("linker.create_and_link") %>"
             data-name="ref"
             data-path="<%= form.path %>"
             data-url="<%= build_typeahead_url.call %>"
             data-browse-url="<%= url_for :controller => :top_containers, :action => :bulk_operations_browse %>"
             data-selected="<%= selected_json %>"
             data-multiplicity="one"
             data-types='<%= linkable_types.to_json %>'
             data-exclude='<%= exclude_ids.to_json %>'
      />

      <% if form.obj.has_key?('_resolved') %>

        <input type="text"
               class='prelinker'
               name="<%= form.path %>[_resolved]"
               value="<%= selected_json %>" />

        <input type="text"
               class='prelinker'
               name="<%= form.path %>[ref]"
               value="<%= form.obj["ref"] %>" />

      <% end %>


      <div class="input-group-btn">
        <a class="btn btn-default dropdown-toggle last" data-toggle="dropdown" href="javascript:void(0);" title="<%= t("top_container.linker.link_title") %>" aria-label="<%= t("top_container.linker.link_title") %>"><span class="caret"></span></a>
        <ul class="dropdown-menu">
          <li><a href="javascript:void(0);" class="linker-browse-btn"><%= t("actions.browse") %></a></li>
          <% if allow_create && user_can?('update_container_record') %>
            <li>
              <a data-target="<%= url_for :controller => :top_containers, :action => :new, :inline => true, :created_for_collection => find_scope_uri.call %>" class="linker-create-btn"><%= t("actions.create") %></a>
            </li>
          <% end %>
        </ul>
      </div>
    </div>
  </div>
</div>

<div class="top_container_location">
  <% selected_json_parsed = JSON.parse(selected_json) %>

  <% container_locations = selected_json_parsed.dig("container_locations") %>
  <% if container_locations && container_locations.length > 0 %>
    <%= render_aspace_partial :partial => "container_locations/show_only_token", :locals => { :container_locations => container_locations } %>
  <% end %>
</div>
  
