//= require search
$(function () {

  // this gets the location information from the solr backend.
  // borrowed from the embedded_search js
  var getLocationHoldingsCount = function () {
    var $this = $(this);
    if ($(this).data('initialised')) return;

    $this.data('initialised', true);

    $.getJSON($this.data('url'), function (json) {
      var output;
      itemCount = json['search_data']['total_hits'];
      if (itemCount == 1) {
        output = '<%= I18n.t('search.location.location_one_top_container') %>';
      } else if (itemCount > 0) {
        output = itemCount + '<%= I18n.t('search.location.location_top_containers') %>';
      } else {
        output = '<%= I18n.t('search.location.location_no_holdings') %>';
      }
      $this.html('<span>' + output + '</span>');
    });
  };

  // This bit is for the regular index page
  // (the whole page reloads, so no MutationObserver is necessary)
  $('.location-holdings').each(getLocationHoldingsCount);
  $(document).on('loadedrecordform.aspace', function (event, $container) {
    $('.location-holdings', $container).each(getLocationHoldingsCount);
  });

  // A modal is dynamically appended when the Browse button is clicked, so it's not possible
  // to fill in the holdings count for each location in the list until after that happens.
  // This also needs to happen when new ones come up via pagination, so we watch for changes 
  // in the linker container and do the same thing.
  $('#container_locations').find('.linker-browse-btn').click( function () {
    $('.location-holdings').each(getLocationHoldingsCount);
    const modalObserver = new MutationObserver(function() {
      $('.location-holdings').each(getLocationHoldingsCount);
    });
    modalObserver.observe($('.modal-body.linker-container')[0], {childList: true, subtree: true});  
  });

});
