{
  "$schema": "http://www.archivesspace.org/archivesspace.json",
  "version": 1,
  "type": "object",
  "parent": "abstract_archival_object",
  "uri": "/repositories/:repo_id/resources",
  "properties": {
    "uri": {
      "type": "string",
      "required": false
    },
    "external_ids": {
      "type": "array",
      "items": {
        "type": "JSONModel(:external_id) object"
      }
    },
    "title": {
      "type": "string",
      "minLength": 1,
      "maxLength": 16384,
      "ifmissing": "error"
    },
    "language": {
      "type": "string",
      "dynamic_enum": "language_iso639_2",
      "ifmissing": "warn"
    },
    "publish": {
      "type": "boolean"
    },
    "subjects": {
      "type": "array",
      "items": {
        "type": "object",
        "subtype": "ref",
        "properties": {
          "ref": {
            "type": "JSONModel(:subject) uri",
            "ifmissing": "error"
          },
          "_resolved": {
            "type": "object",
            "readonly": "true"
          }
        }
      }
    },
    "linked_events": {
      "type": "array",
      "readonly": "true",
      "items": {
        "type": "object",
        "subtype": "ref",
        "properties": {
          "ref": {
            "type": "JSONModel(:event) uri",
            "ifmissing": "error"
          },
          "_resolved": {
            "type": "object",
            "readonly": "true"
          }
        }
      }
    },
    "extents": {
      "type": "array",
      "items": {
        "type": "JSONModel(:extent) object"
      },
      "ifmissing": "error",
      "minItems": 1
    },
    "dates": {
      "type": "array",
      "items": {
        "type": "JSONModel(:date) object"
      },
      "ifmissing": "error",
      "minItems": 1
    },
    "external_documents": {
      "type": "array",
      "items": {
        "type": "JSONModel(:external_document) object"
      }
    },
    "rights_statements": {
      "type": "array",
      "items": {
        "type": "JSONModel(:rights_statement) object"
      }
    },
    "linked_agents": {
      "type": "array",
      "items": {
        "type": "object",
        "subtype": "ref",
        "properties": {
          "role": {
            "type": "string",
            "dynamic_enum": "linked_agent_role",
            "ifmissing": "error"
          },
          "terms": {
            "type": "array",
            "items": {
              "type": "JSONModel(:term) uri_or_object"
            }
          },
          "relator": {
            "type": "string",
            "dynamic_enum": "linked_agent_archival_record_relators"
          },
          "title": {
            "type": "string"
          },
          "ref": {
            "type": [
              {
                "type": "JSONModel(:agent_corporate_entity) uri"
              },
              {
                "type": "JSONModel(:agent_family) uri"
              },
              {
                "type": "JSONModel(:agent_person) uri"
              },
              {
                "type": "JSONModel(:agent_software) uri"
              }
            ],
            "ifmissing": "error"
          },
          "_resolved": {
            "type": "object",
            "readonly": "true"
          }
        }
      }
    },
    "suppressed": {
      "type": "boolean",
      "readonly": "true"
    },
    "lock_version": {
      "type": [
        "integer",
        "string"
      ],
      "required": false
    },
    "jsonmodel_type": {
      "type": "string",
      "ifmissing": "error"
    },
    "created_by": {
      "type": "string",
      "readonly": true
    },
    "last_modified_by": {
      "type": "string",
      "readonly": true
    },
    "user_mtime": {
      "type": "date-time",
      "readonly": true
    },
    "system_mtime": {
      "type": "date-time",
      "readonly": true
    },
    "create_time": {
      "type": "date-time",
      "readonly": true
    },
    "repository": {
      "type": "object",
      "subtype": "ref",
      "readonly": "true",
      "properties": {
        "ref": {
          "type": "JSONModel(:repository) uri",
          "ifmissing": "error",
          "readonly": "true"
        },
        "_resolved": {
          "type": "object",
          "readonly": "true"
        }
      }
    },
    "id_0": {
      "type": "string",
      "ifmissing": "error",
      "maxLength": 255
    },
    "id_1": {
      "type": "string",
      "maxLength": 255
    },
    "id_2": {
      "type": "string",
      "maxLength": 255
    },
    "id_3": {
      "type": "string",
      "maxLength": 255
    },
    "level": {
      "type": "string",
      "ifmissing": "error",
      "dynamic_enum": "archival_record_level"
    },
    "other_level": {
      "type": "string",
      "maxLength": 255
    },
    "resource_type": {
      "type": "string",
      "dynamic_enum": "resource_resource_type"
    },
    "tree": {
      "type": "object",
      "subtype": "ref",
      "properties": {
        "ref": {
          "type": "JSONModel(:resource_tree) uri",
          "ifmissing": "error"
        },
        "_resolved": {
          "type": "object",
          "readonly": "true"
        }
      }
    },
    "restrictions": {
      "type": "boolean",
      "default": false
    },
    "repository_processing_note": {
      "type": "string",
      "maxLength": 65000
    },
    "ead_id": {
      "type": "string",
      "maxLength": 255
    },
    "ead_location": {
      "type": "string",
      "maxLength": 255
    },
    "finding_aid_title": {
      "type": "string",
      "maxLength": 65000
    },
    "finding_aid_subtitle": {
      "type": "string",
      "maxLength": 65000
    },
    "finding_aid_filing_title": {
      "type": "string",
      "maxLength": 65000
    },
    "finding_aid_date": {
      "type": "string",
      "maxLength": 255
    },
    "finding_aid_author": {
      "type": "string",
      "maxLength": 65000
    },
    "finding_aid_description_rules": {
      "type": "string",
      "dynamic_enum": "resource_finding_aid_description_rules"
    },
    "finding_aid_language": {
      "type": "string",
      "maxLength": 255
    },
    "finding_aid_sponsor": {
      "type": "string",
      "maxLength": 65000
    },
    "finding_aid_edition_statement": {
      "type": "string",
      "maxLength": 65000
    },
    "finding_aid_series_statement": {
      "type": "string",
      "maxLength": 65000
    },
    "finding_aid_status": {
      "type": "string",
      "dynamic_enum": "resource_finding_aid_status"
    },
    "finding_aid_note": {
      "type": "string",
      "maxLength": 65000
    },
    "revision_statements": {
      "type": "array",
      "items": {
        "type": "JSONModel(:revision_statement) object"
      }
    },
    "instances": {
      "type": "array",
      "items": {
        "type": "JSONModel(:instance) object"
      }
    },
    "deaccessions": {
      "type": "array",
      "items": {
        "type": "JSONModel(:deaccession) object"
      }
    },
    "collection_management": {
      "type": "JSONModel(:collection_management) object"
    },
    "user_defined": {
      "type": "JSONModel(:user_defined) object"
    },
    "related_accessions": {
      "type": "array",
      "items": {
        "type": "object",
        "subtype": "ref",
        "properties": {
          "ref": {
            "type": [
              {
                "type": "JSONModel(:accession) uri"
              }
            ],
            "ifmissing": "error"
          },
          "_resolved": {
            "type": "object",
            "readonly": "true"
          }
        }
      }
    },
    "classifications": {
      "type": "array",
      "items": {
        "type": "object",
        "subtype": "ref",
        "properties": {
          "ref": {
            "type": [
              {
                "type": "JSONModel(:classification) uri"
              },
              {
                "type": "JSONModel(:classification_term) uri"
              }
            ],
            "ifmissing": "error"
          },
          "_resolved": {
            "type": "object",
            "readonly": "true"
          }
        }
      }
    },
    "notes": {
      "type": "array",
      "items": {
        "type": [
          {
            "type": "JSONModel(:note_bibliography) object"
          },
          {
            "type": "JSONModel(:note_index) object"
          },
          {
            "type": "JSONModel(:note_multipart) object"
          },
          {
            "type": "JSONModel(:note_singlepart) object"
          }
        ]
      }
    }
  },
  "validations": [
    [
      "error",
      "resource_check_identifier"
    ],
    [
      "warning",
      "check_resource_otherlevel"
    ]
  ]
}